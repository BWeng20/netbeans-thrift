package bweng.netbeans.thrift.explorer;

import bweng.netbeans.thrift.ThriftDataObject;
import java.lang.ref.WeakReference;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.BeanTreeView;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

@ConvertAsProperties(
   dtd = "-//bweng.netbeans.thrift.explorer//ThriftExplorer//EN",
   autostore = false
)
@TopComponent.Description(
   preferredID = "ThriftExplorerTopComponent",
   iconBase = "bweng/netbeans/thrift/resources/Thrift.png",
   persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "bweng.netbeans.thrift.explorer.ThriftExplorerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
   displayName = "#CTL_ThriftExplorerAction",
   preferredID = "ThriftExplorerTopComponent" //< This ensures that the explorer is a singleton.
)
@Messages(
   {
      "CTL_ThriftExplorerAction=ThriftExplorer",
      "CTL_ThriftExplorerTopComponent=Thrift Explorer",
      "HINT_ThriftExplorerTopComponent=This is a Thrift explorer"
   })
public final class ThriftExplorerManager extends TopComponent implements ExplorerManager.Provider
{

   private final transient ExplorerManager explorerManager_ = new ExplorerManager();
   static private WeakReference<ThriftExplorerManager> instance_;
   private final transient ProjectChildFactory factory_ = new ProjectChildFactory();

   public ThriftExplorerManager()
   {
      System.out.println("ThriftExplorerTopComponent created");
      initComponents();
      setName(Bundle.CTL_ThriftExplorerTopComponent());
      setToolTipText(Bundle.HINT_ThriftExplorerTopComponent());

      associateLookup(ExplorerUtils.createLookup(explorerManager_, getActionMap()));

      explorerManager_.setRootContext(new AbstractNode(Children.create( factory_, true )));
      explorerManager_.getRootContext().setDisplayName("Thrift Files");

      instance_ = new WeakReference<ThriftExplorerManager>(this);
   }

   static public ThriftExplorerManager getInstance()
   {
      return (null != instance_) ? instance_.get() : null;
   }

   @Override
   public ExplorerManager getExplorerManager()
   {
      return explorerManager_;
   }

   /**
    * This method is called from within the constructor to initialise the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents()
   {

      ScrollPane = new BeanTreeView();
      ((BeanTreeView)ScrollPane).setRootVisible( false );

      setLayout(new java.awt.BorderLayout());
      add(ScrollPane, java.awt.BorderLayout.CENTER);
   }// </editor-fold>//GEN-END:initComponents

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JScrollPane ScrollPane;
   // End of variables declaration//GEN-END:variables

   public void showThrift(ThriftDataObject thriftDataObject, int lineIdx)
   {
   }

   @Override
   public void componentOpened()
   {
      System.out.println("ThriftExplorerTopComponent opened");
      factory_.startUpdate();
   }

   @Override
   public void componentClosed()
   {
      System.out.println("ThriftExplorerTopComponent closed");
      factory_.stopUpdate();
   }

   void writeProperties(java.util.Properties p)
   {
      p.setProperty("version", "1.0");
      // TODO store your settings
   }

   void readProperties(java.util.Properties p)
   {
      String version = p.getProperty("version");
      // TODO read your settings according to their version
   }
}
